@using StudentManagement.Api.Entities
@model PaginatedList<Student>


@{
    ViewBag.Title = "Index";
}

<h2>Students List</h2>

@using (Html.BeginForm("Index", "Student", FormMethod.Get))
{
    <div class="form-group">
        @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" value="@ViewBag.Name" name="name" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>
}

<table class="table">
    <tr>
        <th>
            First Name
        </th>
        <th>
            Sur Name
        </th>
        <th>
            Gender
        </th>
        <th>
            Date Of Birth
        </th>
        <th></th>
    </tr>

    @if (Model?.Count > 0)
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SurName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DOB)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="5">No Students Record Found</td>
        </tr>
    }
</table>

<div class="btn-group pull-right">
    @Html.PageLinks(new PageInfo
    {
        PageIndex = Model.PageIndex,
        PageSize = Model.PageSize,
        TotalCount = Model.TotalCount,
        TotalPageCount = Model.TotalPageCount,
        HasNextPage = Model.HasNextPage,
        HasPrevPage = Model.HasPreviousPage
    }, x => Url.Action("Index", "Student", new { page = x, name = ViewBag.Name }))
</div>