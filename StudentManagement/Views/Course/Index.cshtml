@using StudentManagement.Api.Entities
@model PaginatedList<Course>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@if (User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}

<table class="table">
    <tr>
        <th>
           CourseCode
        </th>
        <th>
            CourseName
        </th>
        <th>
            TeacherName
        </th>
        <th>
            StartDate
        </th>
        <th>
            EndDate
        </th>
        <th>
            Space
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CourseCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CourseName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TeacherName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Space)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>

<div class="btn-group pull-right">
    @Html.PageLinks(new PageInfo
    {
        PageIndex = Model.PageIndex,
        PageSize = Model.PageSize,
        TotalCount = Model.TotalCount,
        TotalPageCount = Model.TotalPageCount,
        HasNextPage = Model.HasNextPage,
        HasPrevPage = Model.HasPreviousPage
    }, x => Url.Action("Index", "Course", new { page = x }))
</div>
